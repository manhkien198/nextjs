import type { GetStaticProps, GetStaticPropsContext, NextPage } from "next";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import useSWR from "swr";
import Header from "../components/Header";
import Movies from "../components/Movies";
import Nav from "../components/Nav";

export interface HomeProps {}
const Home: NextPage = () => {
  const [value, setValue] = useState("batman");
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState({ show: false, msg: "" });
  const [data, setData] = useState(null);
  const [id, setId] = useState(28);
  const ref = useRef(null);
  const handleChangeSearch = (e: any) => {
    const keyword = e.target.value;
    if (ref.current) {
      clearTimeout(ref.current);
    }
    ref.current = setTimeout(() => setValue(keyword), 1000);
  };
  const baseUrl = "https://api.themoviedb.org/3/";
  const handleClickCate = (id) => {
    setId(id);
  };

  const navProps = {
    setId: setId,
    handleClickCate: handleClickCate,
  };
  const fetchById = async () => {
    setLoading(true);
    try {
      const response = await fetch(
        `${baseUrl}search/movie?api_key=6563c3cef5083ff24c5f426a28004f38&language=en-US&page=1&query=${value}`
      );
      const data = await response.json();
      setData(data.items);
      setLoading(false);
    } catch (err) {
      setError({ show: true, msg: err });
    }
  };
  const fetchByQuery = async () => {
    setLoading(true);
    try {
      const response = await fetch(
        `${baseUrl}list/${id}?api_key=6563c3cef5083ff24c5f426a28004f38&language=en-US`
      );
      const data = await response.json();
      setData(data.items);
      setLoading(false);
    } catch (err) {
      setError({ show: true, msg: err });
    }
  };
  useEffect(() => {
    fetchById();
  }, [id]);
  useEffect(() => {
    fetchByQuery();
  }, [value]);

  return (
    <div>
      <Head>
        <title>Movie Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Nav {...navProps} />
      <input
        type="text"
        placeholder="Enter your movie name"
        className="mt-5 ml-20 p-2 rounded w-100 form-control"
        onChange={handleChangeSearch}
      />
      {error.show && <div className="error ml-20">{error.msg}</div>}
      <Movies isLoading={loading} movies={data} />
    </div>
  );
};

export default Home;
export const getStaticProps: GetStaticProps<HomeProps> = async (
  context: GetStaticPropsContext
) => {
  return {
    props: {},
    revalidate: 60,
  };
};
